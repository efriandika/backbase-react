{"version":3,"sources":["redux/app/types.js","components/weather-forecast/WeatherForecast.module.scss","components/skeleton/Skeleton.js","redux/app/actions.js","libs/unit/hooks/useTemperatureUnit.js","libs/unit/hooks/useSpeedUnit.js","libs/http/http.js","libs/http/hooks/useHttp.js","components/skeleton/Skeleton.module.scss","components/layouts/page-skeleton/PageSkeleton.js","redux/weather/types.js","components/layouts/partials/Navbar.js","redux/weather/actions.js","components/layouts/partials/Footer.js","components/weather-forecast/WeatherForecast.js","components/layouts/partials/Drawer.js","components/layouts/LayoutDefault.js","routes.js","components/layouts/partials/NotFound.js","App.js","redux/utilities.js","redux/app/reducers.js","redux/store.js","redux/weather/reducers.js","index.js"],"names":["appTypes","ADD_CITY","OPEN_WEATHER_FORECAST","CLOSE_WEATHER_FORECAST","module","exports","Skeleton","count","width","Wrapper","wrapper","height","circle","customStyle","style","customClassName","className","elements","i","elementStyle","borderRadius","styles","skeleton","push","data-testid","role","aria-live","aria-label","map","element","defaultProps","addCity","city","type","payload","openWeatherForecast","lon","lat","name","closeWeatherForecast","useTemperatureUnit","units","useSelector","state","weather","text","useSpeedUnit","http","axios","create","baseURL","process","params","appid","useHttp","makeUseAxios","PageSkeleton","weatherTypes","Navbar","dispatch","useDispatch","to","aria-checked","checked","onChange","e","target","Footer","href","rel","WeatherForecast","manual","data","loading","error","fetchData","cancelRequest","textTemperatureUnit","textSpeedUnit","a","url","exclude","unixTimestampToTime","timestamp","Date","toLocaleTimeString","useEffect","fetchWeatherData","container","current","length","weatherIcon","src","icon","alt","main","cityName","dt","toLocaleString","scope","hourly","slice","item","index","temp","feels_like","wind_speed","renderData","response","status","message","Drawer","drawerIsOpen","app","drawer","selectedCity","closeDrawer","onClick","LayoutDefault","children","lazyLoadOption","fallback","Dashboard","loadable","About","defaultRoute","routes","path","component","layout","props","NotFound","fontSize","App","basename","route","exact","render","from","updateObject","oldObject","newValues","Object","assign","store","INITIAL_STATE","cities","rootReducers","combineReducers","action","bindMiddleware","middleware","applyMiddleware","createStore","preloadedState","createStoreFn","currentStore","getState","undefined","window","initializeStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.154bb78e.chunk.js","sourcesContent":["export const appTypes = {\n  ADD_CITY: 'ADD_CITY',\n  OPEN_WEATHER_FORECAST: 'OPEN_WEATHER_FORECAST',\n  CLOSE_WEATHER_FORECAST: 'CLOSE_WEATHER_FORECAST',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherForecast_container__18y2d\",\"cityName\":\"WeatherForecast_cityName__3tn70\",\"weatherIcon\":\"WeatherForecast_weatherIcon__1-WL5\"};","import PropTypes from 'prop-types';\nimport styles from './Skeleton.module.scss';\n\n/**\n * Skeleton Element can be used to make a component skeleton\n * @author efriandika\n */\nexport function Skeleton({\n  count,\n  width,\n  wrapper: Wrapper,\n  height,\n  circle,\n  style: customStyle,\n  className: customClassName,\n}) {\n  const elements = [];\n\n  // Render multiple rows of skeleton\n  for (let i = 0; i < count; i++) {\n    let elementStyle = {};\n\n    if (width !== null) {\n      elementStyle.width = width;\n    }\n\n    if (height !== null) {\n      elementStyle.height = height;\n    }\n\n    if (width !== null && height !== null && circle) {\n      elementStyle.borderRadius = \"50%\";\n    }\n\n    let className = styles.skeleton;\n\n    if (customClassName) {\n      className += \" \" + customClassName;\n    }\n\n    elements.push(\n      <span\n        key={i}\n        className={className}\n        style={{\n          ...customStyle,\n          ...elementStyle,\n        }}\n        data-testid=\"skeleton-element\"\n      >\n        &zwnj;\n      </span>\n    );\n  }\n\n  return (\n    <span role=\"status\" aria-live=\"assertive\" aria-label=\"Loading content...\">\n      {Wrapper\n        ? elements.map((element, i) => (\n          <Wrapper key={i}>\n            {element}\n            &zwnj;\n          </Wrapper>\n        ))\n        : elements}\n    </span>\n  );\n}\n\nSkeleton.propTypes = {\n  /**\n   * Total rows\n   */\n  count: PropTypes.number,\n\n  /**\n   * Width of the skeleton element\n   */\n  width: PropTypes.any,\n\n  /**\n   * Component to wrap the skeleton element\n   */\n  wrapper: PropTypes.any,\n\n  /**\n   * Height of the skeleton element\n   */\n  height: PropTypes.any,\n\n  /**\n   * Set element as circle\n   */\n  circle: PropTypes.bool,\n\n  /**\n   * Custom additional style\n   */\n  style: PropTypes.object,\n\n  /**\n   * Custom additional css class\n   */\n  className: PropTypes.string,\n};\n\nSkeleton.defaultProps = {\n  count: 1,\n  width: null,\n  wrapper: null,\n  height: null,\n  circle: false,\n  style: {},\n  className: \"\",\n};\n","import { appTypes } from './types';\n\nexport const addCity = (city) => ({\n  type: appTypes.ADD_CITY,\n  payload: { city }\n});\n\nexport const openWeatherForecast = (lon, lat, name) => ({\n  type: appTypes.OPEN_WEATHER_FORECAST,\n  payload: { lon, lat, name }\n});\n\nexport const closeWeatherForecast = () => ({ type: appTypes.CLOSE_WEATHER_FORECAST });\n","import { useSelector } from 'react-redux';\n\nexport function useTemperatureUnit() {\n  const units = useSelector((state) => state.weather.units);\n\n  return (text) => {\n    switch (units) {\n      case 'imperial':\n        return `${text}\\u00b0 F`;\n      case 'metric':\n        return `${text}\\u00b0 C`;\n      default:\n        return text;\n    }\n  };\n}\n","import { useSelector } from 'react-redux';\n\nexport function useSpeedUnit() {\n  const units = useSelector((state) => state.weather.units);\n\n  return (text) => {\n    switch (units) {\n      case 'imperial':\n        return `${text} miles/h`;\n      case 'metric':\n        return `${text} meter/s`;\n      default:\n        return text;\n    }\n  };\n}\n","import axios from 'axios';\n\n/**\n * To handle http request\n * @author efriandika\n */\nexport const http = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_BASE_URL,\n  params: {\n    appid: process.env.REACT_APP_BACKEND_API_KEY,\n  }\n});\n","import { makeUseAxios } from 'axios-hooks';\nimport { http } from '../http';\n\nconst useHttp = makeUseAxios({\n  axios: http\n});\n\nexport { useHttp };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skeleton\":\"Skeleton_skeleton__8yEY-\",\"background-animation\":\"Skeleton_background-animation__YOnS0\"};","import { Skeleton } from '../../skeleton/Skeleton';\n\nexport function PageSkeleton() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {[1, 2, 3 ,4 ,5 ,6].map((i) => (\n          <div key={`page-skeleton-${i}`} className=\"col-md-4 mb-4\">\n            <Skeleton height=\"170px\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","export const weatherTypes = {\n  SET_UNITS: 'SET_UNITS',\n};\n","import { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { enableImperialUnits, enableMetricUnits } from '../../../redux/weather/actions';\n\nexport function Navbar() {\n  const dispatch = useDispatch();\n  const units = useSelector((state) => state.weather.units);\n\n  function handleUnitSwitch(e) {\n    if (e.target.checked) {\n      dispatch(enableMetricUnits());\n    } else {\n      dispatch(enableImperialUnits());\n    }\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light navbar-weather\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand text-brand text-primary\" to=\"/\">{process.env.REACT_APP_NAME}</Link>\n\n        <div className=\"d-flex\">\n          F&deg;\n          <div className=\"form-check form-switch ms-2\">\n            <input name=\"unit\" className=\"form-check-input\" type=\"checkbox\" aria-checked={units === 'metric'} checked={units === 'metric'} onChange={handleUnitSwitch} aria-label=\"Metric Units Switcher\" />\n          </div>\n          C&deg;\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import { weatherTypes } from './types';\n\nexport const setUnits = (units) => ({ type: weatherTypes.SET_UNITS, payload: { units } });\nexport const enableImperialUnits = () => ({ type: weatherTypes.SET_UNITS, payload: { units: 'imperial' } });\nexport const enableMetricUnits = () => ({ type: weatherTypes.SET_UNITS, payload: { units: 'metric' } });\n","import { NavLink } from 'react-router-dom';\n\nexport function Footer() {\n  return (\n    <footer className=\"footer\">\n      <ul className=\"nav justify-content-center\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/dashboard\">Dashboard</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/about\">About Me</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"https://efriandika.github.io/backbase-react\" target=\"_blank\" rel=\"noreferrer\">Live Demo</a>\n        </li>\n      </ul>\n\n      <div className=\"footer-text\">\n        Made with <i className=\"bi bi-heart\" role=\"img\" aria-label=\"Love\" /> for Backbase Interview Assignment.\n      </div>\n\n      <div className=\"author\">\n        <a href=\"https://www.linkedin.com/in/efriandika/\" target=\"_blank\"  rel=\"noreferrer\">\n          Efriandika Pratama\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHttp } from '../../libs/http/hooks/useHttp';\nimport styles from './WeatherForecast.module.scss';\nimport { Skeleton } from '../skeleton/Skeleton';\nimport { useTemperatureUnit } from '../../libs/unit/hooks/useTemperatureUnit';\nimport { useSpeedUnit } from '../../libs/unit/hooks/useSpeedUnit';\n\n/**\n * To show weather forecast information for a city in next dew hours\n * @author efriandika\n */\nexport function WeatherForecast({ className, units, lon, lat, name }) {\n  const [{ data, loading, error }, fetchData, cancelRequest] = useHttp({}, { manual: true });\n  const textTemperatureUnit = useTemperatureUnit();\n  const textSpeedUnit = useSpeedUnit();\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    fetchWeatherData(lat, lon);\n    return () => cancelRequest();\n  }, [lat, lon]);\n  /* eslint-enabled react-hooks/exhaustive-deps */\n\n  async function fetchWeatherData(lat, lon) {\n    try {\n      fetchData({\n        url: '/onecall',\n        params: {\n          lat,\n          lon,\n          units,\n          exclude: 'minutely,daily,alerts',\n        },\n      });\n    } catch (e) {\n      // alert('Failed to get Skeleton Data from the server!');\n    }\n  }\n\n  function unixTimestampToDateTime(timestamp) {\n    return new Date(timestamp * 1000).toLocaleString();\n  }\n\n  function unixTimestampToTime(timestamp) {\n    return new Date(timestamp * 1000).toLocaleTimeString();\n  }\n\n  function renderWeatherIcon() {\n    if (data.current.weather.length > 0) {\n      return (<img className={styles.weatherIcon} src={`https://openweathermap.org/img/wn/${data.current.weather[0].icon}@2x.png`} alt={data.current.weather[0].main} data-testid=\"weather-icon\" />);\n    } else {\n      return null;\n    }\n  }\n\n  function renderSkeleton() {\n    return (\n      <div className={ `${className} ${styles.container}` }>\n        <div className={styles.cityName}><Skeleton width=\"50%\" height=\"50px\" /></div>\n        <div className=\"line-height-condenced text-muted text-tiny\">\n          <div><Skeleton width=\"30%\" height=\"20px\" /></div>\n          <div className=\"font-weight-semibold\"><Skeleton width=\"60%\" height=\"20px\" /></div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderData() {\n    return (\n      <div className={ `${className} ${styles.container}` } aria-label={`${name}'s forecast weather`}>\n        {renderWeatherIcon()}\n\n        <div className={styles.cityName}>{name}</div>\n        <div className=\"line-height-condenced text-muted text-tiny\">\n          <div>Updated at:</div>\n          <div className=\"font-weight-semibold\">{unixTimestampToDateTime(data.current.dt)}</div>\n        </div>\n\n        <div className=\"mt-4 text-tiny\">\n          <div className=\"font-weight-semibold\">Forecast (Next 5 Hours)</div>\n          <table className=\"table\">\n            <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Temp</th>\n              <th scope=\"col\">Feels Like</th>\n              <th scope=\"col\">Wind Speed</th>\n            </tr>\n            </thead>\n            <tbody>\n            {data.hourly.slice(1, 6).map((item, index) => (\n              <tr key={`forecast-table-${index}`}>\n                <td>{unixTimestampToTime(item.dt)}</td>\n                <td>{textTemperatureUnit(item.temp)}</td>\n                <td>{textTemperatureUnit(item.feels_like)}</td>\n                <td>{textSpeedUnit(item.wind_speed)}</td>\n              </tr>\n            ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  function renderErrorResponse() {\n    return (\n      <div className={ `${className} ${styles.container} text-danger` }>\n        Data cannot be loaded from the server.<br/>\n        { (error.response.status === 404) ? (\n          <>\n            <strong>{ name } (lon: { lon } | lat: { lat })</strong> is not found\n          </>\n        ) : (\n          <>\n            <strong>Error:</strong> { error.message }\n          </>\n        ) }\n      </div>\n    );\n  }\n\n  if (data && !loading && error == null) {\n    return renderData();\n  } else if (error != null) {\n    return renderErrorResponse();\n  } else {\n    return renderSkeleton();\n  }\n}\n\nWeatherForecast.propTypes = {\n  /**\n   * Custom className\n   */\n  className: PropTypes.string,\n\n  /**\n   * Data Unit\n   * @see {@link https://openweathermap.org/current#dat} for more information\n   */\n  units: PropTypes.string,\n\n  /**\n   * City's Longitude coordinate\n   */\n  lon: PropTypes.number.isRequired,\n\n\n  /**\n   * City's Latitude coordinate\n   */\n  lat: PropTypes.number.isRequired,\n\n  /**\n   * City name\n   */\n  name: PropTypes.string.isRequired,\n};\n\nWeatherForecast.defaultProps = {\n  className: '',\n  units: 'metric',\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { closeWeatherForecast } from '../../../redux/app/actions';\nimport { WeatherForecast } from '../../weather-forecast/WeatherForecast';\n\n/**\n * Drawer dialog box\n * @author efriandika\n */\nexport function Drawer() {\n  const dispatch = useDispatch();\n  const drawerIsOpen = useSelector((state) => state.app.drawer);\n  const selectedCity = useSelector((state) => state.app.selectedCity);\n  const units = useSelector((state) => state.weather.selectedCity);\n\n  function closeDrawer() {\n    dispatch(closeWeatherForecast());\n  }\n\n  return (\n    <div className={`drawer ${drawerIsOpen ? 'open' : ''}`} role=\"dialog\" aria-label=\"Weather Forecasting\">\n      <div className=\"drawer-overlay\" onClick={closeDrawer} />\n      <div className=\"drawer-content\">\n        <button type=\"button\" className=\"btn-close\" onClick={closeDrawer} aria-label=\"close\" data-testid=\"hehe\">\n          <i className=\"bi bi-x-circle\" />\n        </button>\n\n        {selectedCity ? (\n          <WeatherForecast\n            className=\"mt-5\"\n            lat={selectedCity.lat}\n            lon={selectedCity.lon}\n            name={selectedCity.name}\n            units={units}\n          />\n        ) : (\n          <div>There is no city selected</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { Navbar } from './partials/Navbar';\nimport { Footer } from './partials/Footer';\nimport { Drawer } from './partials/Drawer';\n\nexport function LayoutDefault({ children }) {\n  return (\n    <>\n      <Navbar />\n        <div className=\"layout-content\">\n          {children}\n        </div>\n      <Footer />\n      <Drawer />\n    </>\n  );\n}\n","import loadable from '@loadable/component';\nimport { PageSkeleton } from './components/layouts/page-skeleton/PageSkeleton';\nimport { LayoutDefault } from './components/layouts/LayoutDefault';\n\nconst lazyLoadOption = {\n  fallback: <PageSkeleton />,\n};\n\n// Lazy Load Import / Dynamic Import\nconst Dashboard = loadable(() => import('./pages/dashboard/Dashboard'), lazyLoadOption);\nconst About = loadable(() => import('./pages/about/About'), lazyLoadOption);\n\n// Application Routing\nexport const defaultRoute = '/dashboard'\nexport const routes = [\n  {\n    path: '/dashboard',\n    component: () => <Dashboard />\n  },\n  {\n    path: '/about',\n    component: () => <About />,\n    layout: (props) => <LayoutDefault {...props} />,\n  },\n];\n","import { Link } from 'react-router-dom';\n\nexport function NotFound() {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center flex-column\" style={{ height: '200px' }}>\n          <div style={{ fontSize: '80px' }}>\n            <i className=\"bi bi-emoji-frown\" />\n          </div>\n\n          The page you are looking for is not found\n\n          <div className=\"mt-4\">\n            <Link className=\"btn btn-primary\" to=\"/\">Go to Dashboard</Link>\n          </div>\n        </div>\n    );\n}\n","import { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { defaultRoute, routes } from './routes';\nimport { NotFound } from './components/layouts/partials/NotFound';\nimport { LayoutDefault } from './components/layouts/LayoutDefault';\n\nfunction App() {\n  return (\n    <AppRouter basename=\"/backbase-react\">\n      <Switch>\n        {routes.map((route, index) => (\n          // You can render a <Route> in as many places\n          // as you want in your app. It will render along\n          // with any other <Route>s that also match the URL.\n          // So, a sidebar or breadcrumbs or anything else\n          // that requires you to render multiple things\n          // in multiple places at the same URL is nothing\n          // more than multiple <Route>s.\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            // children={<route.component />}\n            render={(props) => {\n              if (route.layout) {\n                return (\n                  <route.layout {...props}>\n                    <route.component {...props} />\n                  </route.layout>\n                )\n              } else {\n                return (\n                  <LayoutDefault {...props}>\n                    <route.component {...props} />\n                  </LayoutDefault>\n                )\n              }\n            }}\n          />\n        ))}\n\n        {defaultRoute !== '/' && <Redirect from=\"/\" to={defaultRoute} exact={true} />}\n\n        {/* NotFound page */}\n        <Route path=\"*\" component={() => (\n          <LayoutDefault>\n            <NotFound />\n          </LayoutDefault>\n        )} />\n      </Switch>\n    </AppRouter>\n  );\n}\n\nexport default App;\n","export function updateObject(oldObject, newValues) {\n  // Encapsulate the idea of passing a new object as the first parameter\n  // to Object.assign to ensure we correctly copy data instead of mutating\n  return Object.assign({}, oldObject, newValues)\n}\n","import { appTypes } from './types';\nimport { updateObject } from '../utilities';\n\nexport const INITIAL_STATE = {\n  drawer: false,\n  selectedCity: null,\n  cities: [\n    'Amsterdam',\n    'Dublin,IE',\n    'Edinburgh',\n    'Manchester',\n    'London',\n  ],\n};\n\nexport const appReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case appTypes.ADD_CITY:\n      return updateObject(state, { drawer: false, cities: [ ...state.cities, action.payload.city ] });\n\n    case appTypes.OPEN_WEATHER_FORECAST:\n      return updateObject(state, {\n        drawer: true,\n        selectedCity: {\n          lon: action.payload.lon,\n          lat: action.payload.lat,\n          name: action.payload.name,\n        }\n      });\n\n    case appTypes.CLOSE_WEATHER_FORECAST:\n      return updateObject(state, { drawer: false, selectedCity: null });\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, createStore as createStoreFn } from 'redux';\nimport { appReducer } from './app/reducers';\nimport { weatherReducer } from './weather/reducers';\n\nlet store;\n\n/* ------------- Assemble The Reducers ------------- */\n/* eslint-disable global-require */\nconst rootReducers = combineReducers({\n  app: appReducer,\n  weather: weatherReducer,\n});\n/* eslint-enable global-require */\n\nconst bindMiddleware = (middleware) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line global-require\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n  return applyMiddleware(...middleware);\n};\n\nconst createStore = (preloadedState = {}) => {\n  /* ------------- Assemble Middleware ------------- */\n  store = createStoreFn(\n    rootReducers,\n    preloadedState,\n    bindMiddleware([]),\n  );\n\n  return store;\n};\n\nexport const initializeStore = (preloadedState) => {\n  let currentStore = store ?? createStore(preloadedState);\n\n  // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n  if (preloadedState && store) {\n    currentStore = createStore({\n      ...store.getState(),\n      ...preloadedState,\n    });\n\n    // Reset the current store\n    store = undefined;\n  }\n\n  // For SSG and SSR always create a new store\n  if (typeof window === 'undefined') {\n    return currentStore;\n  }\n\n  // Create the store once only in the client\n  if (!store) {\n    store = currentStore;\n  }\n\n  return currentStore;\n};\n","import { weatherTypes } from './types';\nimport { updateObject } from '../utilities';\n\nexport const INITIAL_STATE = {\n  units: 'metric',\n};\n\nexport const weatherReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case weatherTypes.SET_UNITS:\n      return updateObject(state, { units: action.payload.units });\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './resources/styles/style.scss';\nimport App from './App';\nimport { initializeStore } from './redux/store';\nimport { Provider } from 'react-redux';\n\nconst store = initializeStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}