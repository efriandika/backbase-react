{"version":3,"sources":["redux/app/types.js","components/skeleton/Skeleton.js","redux/app/actions.js","libs/http/http.js","libs/http/hooks/useHttp.js","components/skeleton/Skeleton.module.scss","components/layouts/page-skeleton/PageSkeleton.js","routes.js","components/layouts/partials/NotFound.js","redux/weather/types.js","components/layouts/partials/Navbar.js","redux/weather/actions.js","components/layouts/partials/Footer.js","components/weather-forecast/WeatherForecast.js","components/layouts/partials/Drawer.js","components/layouts/LayoutDefault.js","App.js","reportWebVitals.js","redux/utilities.js","redux/app/reducers.js","redux/store.js","redux/weather/reducers.js","index.js"],"names":["appTypes","ADD_CITY","OPEN_WEATHER_FORECAST","CLOSE_WEATHER_FORECAST","Skeleton","count","width","Wrapper","wrapper","height","circle","customStyle","style","customClassName","className","elements","i","elementStyle","borderRadius","styles","skeleton","push","map","element","defaultProps","addCity","city","type","payload","openWeatherForecast","lon","lat","name","closeWeatherForecast","http","axios","create","baseURL","process","params","appid","useHttp","makeUseAxios","module","exports","PageSkeleton","lazyLoadOption","fallback","Dashboard","loadable","About","defaultRoute","routes","path","component","NotFound","weatherTypes","Navbar","dispatch","useDispatch","units","useSelector","state","weather","to","checked","onChange","e","target","Footer","href","rel","role","aria-label","WeatherForecast","manual","fetchData","data","loading","cancelRequest","a","url","exclude","alert","useEffect","fetchWeatherData","Drawer","drawerIsOpen","app","drawer","selectedCity","closeDrawer","onClick","LayoutDefault","children","App","basename","route","index","exact","render","props","layout","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","newValues","Object","assign","store","INITIAL_STATE","cities","rootReducers","combineReducers","action","bindMiddleware","middleware","applyMiddleware","initStore","preloadedState","createStore","currentStore","getState","undefined","window","initializeStore","ReactDOM","StrictMode","document","getElementById","console","log"],"mappings":"uHAAA,kCAAO,IAAMA,EAAW,CACtBC,SAAU,WACVC,sBAAuB,wBACvBC,uBAAwB,2B,qGCAnB,SAASC,EAAT,GAWL,IAHE,IAPFC,EAOC,EAPDA,MACAC,EAMC,EANDA,MACSC,EAKR,EALDC,QACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,OACOC,EAEN,EAFDC,MACWC,EACV,EADDC,UAEMC,EAAW,GAERC,EAAI,EAAGA,EAAIX,EAAOW,IAAK,CAC9B,IAAIC,EAAe,GAEL,OAAVX,IACFW,EAAaX,MAAQA,GAGR,OAAXG,IACFQ,EAAaR,OAASA,GAGV,OAAVH,GAA6B,OAAXG,GAAmBC,IACvCO,EAAaC,aAAe,OAG9B,IAAIJ,EAAYK,IAAOC,SAEnBP,IACFC,GAAa,IAAMD,GAGrBE,EAASM,KACP,sBAEEP,UAAWA,EACXF,MAAK,2BACAD,GACAM,GALP,mBACOD,IAYX,OACE,+BACGT,EACGQ,EAASO,KAAI,SAACC,EAASP,GAAV,OACb,eAACT,EAAD,WACGgB,EADH,WAAcP,MAKdD,IAeVX,EAASoB,aAAe,CACtBnB,MAAO,EACPC,MAAO,KACPE,QAAS,KACTC,OAAQ,KACRC,QAAQ,EACRE,MAAO,GACPE,UAAW,K,gCChFb,kHAEaW,EAAU,SAACC,GAAD,MAAW,CAChCC,KAAM3B,IAASC,SACf2B,QAAS,CAAEF,UAGAG,EAAsB,SAACC,EAAKC,EAAKC,GAAX,MAAqB,CACtDL,KAAM3B,IAASE,sBACf0B,QAAS,CAAEE,MAAKC,MAAKC,UAGVC,EAAuB,iBAAO,CAAEN,KAAM3B,IAASG,0B,sFCV/C+B,E,OAAOC,EAAMC,OAAO,CAC/BC,QAASC,0CACTC,OAAQ,CACNC,MAAOF,sCCFEG,EAAUC,YAAa,CAClCP,MAAOD,K,mBCHTS,EAAOC,QAAU,CAAC,SAAW,2BAA2B,uBAAuB,yC,sJCCxE,SAASC,IACd,OACE,qBAAK/B,UAAU,MAAf,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGQ,KAAI,SAACN,GAAD,OACtB,qBAAgCF,UAAU,gBAA1C,SACE,cAACV,EAAA,EAAD,CAAUK,OAAO,WADnB,wBAA2BO,SCHnC,IAAM8B,EAAiB,CACrBC,SAAU,cAACF,EAAD,KAING,EAAYC,aAAS,kBAAM,+BAAuCH,GAClEI,EAAQD,aAAS,kBAAM,+BAA+BH,GAG/CK,EAAe,aACfC,EAAS,CACpB,CACEC,KAAM,aACNC,UAAW,kBAAM,cAACN,EAAD,MAEnB,CACEK,KAAM,SACNC,UAAW,kBAAM,cAACJ,EAAD,OCpBd,SAASK,IACZ,OACI,oD,YCFKC,EACA,YCGN,SAASC,IACd,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQH,SAUnD,OACE,qBAAK9C,UAAU,mDAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,IAAD,CAAMA,UAAU,uCAAuCkD,GAAG,IAA1D,SAA+D1B,qBAE/D,sBAAKxB,UAAU,SAAf,kBAEE,qBAAKA,UAAU,8BAAf,SACE,uBAAOkB,KAAK,OAAOlB,UAAU,mBAAmBa,KAAK,WAAWsC,QAAmB,WAAVL,EAAoBM,SAhBvG,SAA0BC,GACpBA,EAAEC,OAAOH,QACXP,ECNkC,CAAE/B,KAAM6B,EAAwB5B,QAAS,CAAEgC,MAAO,YDQpFF,ECToC,CAAE/B,KAAM6B,EAAwB5B,QAAS,CAAEgC,MAAO,mBDkBpF,gBEnBD,SAASS,IACd,OACE,yBAAQvD,UAAU,SAAlB,UACE,qBAAIA,UAAU,6BAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWkD,GAAG,aAAjC,yBAEF,oBAAIlD,UAAU,WAAd,SACE,cAAC,IAAD,CAASA,UAAU,WAAWkD,GAAG,SAAjC,wBAEF,oBAAIlD,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWwD,KAAK,8CAA8CF,OAAO,SAASG,IAAI,aAA/F,4BAIJ,sBAAKzD,UAAU,cAAf,uBACY,mBAAGA,UAAU,cAAc0D,KAAK,MAAMC,aAAW,SAD7D,yCAIA,qBAAK3D,UAAU,SAAf,SACE,mBAAGwD,KAAK,0CAA0CF,OAAO,SAAUG,IAAI,aAAvE,qC,qDClBD,SAASG,EAAT,GAA+D,EAApC5D,UAAqC,IAA1B8C,EAAyB,EAAzBA,MAAO9B,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,KAAQ,EACdS,YAAQ,GAAI,CAAEkC,QAAQ,IADR,0BAC1CC,GAD0C,EAC3DC,KAD2D,EACrDC,QADqD,MAC/BC,EAD+B,iDAUpE,WAAgChD,EAAKD,GAArC,SAAAkD,EAAA,sDACE,IACEJ,EAAU,CACRK,IAAK,WACL1C,OAAQ,CACNR,MACAD,MACA8B,QACAsB,QAAS,2BAGb,MAAOf,GACPgB,MAAM,gDAZV,4CAVoE,sBA0BpE,OAtBAC,qBAAU,WAER,OANkE,sCAKlEC,CAAiBtD,EAAKD,GACf,kBAAMiD,OACZ,CAAChD,EAAKD,IAoBP,8BAAME,IC3BH,SAASsD,IACd,IAAM5B,EAAWC,cACX4B,EAAe1B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,IAAIC,UAChDC,EAAe7B,aAAY,SAACC,GAAD,OAAWA,EAAM0B,IAAIE,gBAChD9B,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQ2B,gBAEnD,SAASC,IACPjC,EAASzB,eAGX,OACE,sBAAKnB,UAAS,iBAAYyE,EAAe,OAAS,IAAlD,UACE,qBAAKzE,UAAU,iBAAiB8E,QAASD,IACzC,sBAAK7E,UAAU,iBAAf,UACE,wBAAQa,KAAK,SAASb,UAAU,YAAY8E,QAASD,EAArD,SACE,mBAAG7E,UAAU,cAGd4E,EACC,cAAChB,EAAD,CACE3C,IAAK2D,EAAa3D,IAClBD,IAAK4D,EAAa5D,IAClBE,KAAM0D,EAAa1D,KACnB4B,MAAOA,IAGT,kEC1BH,SAASiC,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAC9B,OACE,qCACE,cAACrC,EAAD,IACE,qBAAK3C,UAAU,iBAAf,SACGgF,IAEL,cAACzB,EAAD,IACA,cAACiB,EAAD,OFgCNZ,EAAgBlD,aAAe,CAC7BV,UAAW,GACX8C,MAAO,UGGMmC,MA5Cf,WACE,OACE,cAAC,IAAD,CAAWC,SAAS,kBAApB,SACE,eAAC,IAAD,WACG5C,EAAO9B,KAAI,SAAC2E,EAAOC,GAAR,OAQV,aAPA,CAOC,IAAD,CAEE7C,KAAM4C,EAAM5C,KACZ8C,MAAOF,EAAME,MAEbC,OAAQ,SAACC,GACP,OAAIJ,EAAMK,OAEN,cAACL,EAAMK,OAAP,2BAAkBD,GAAlB,aACE,cAACJ,EAAM3C,UAAP,eAAqB+C,OAKvB,cAACR,EAAD,2BAAmBQ,GAAnB,aACE,cAACJ,EAAM3C,UAAP,eAAqB+C,SAdxBH,MAsBgB,cAAC,IAAD,CAAUK,KAAK,IAAIvC,GAAIb,EAAcgD,OAAO,IAGrE,cAAC,IAAD,CAAO9C,KAAK,IAAIC,UAAWC,UC/BpBiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCPP,SAASQ,EAAaC,EAAWC,GAGtC,OAAOC,OAAOC,OAAO,GAAIH,EAAWC,GCA/B,ICCHG,EDDSC,EAAgB,CAC3B9B,QAAQ,EACRC,aAAc,KACd8B,OAAQ,CACN,YACA,YACA,YACA,aACA,WERSD,EAAgB,CAC3B3D,MAAO,UDIH6D,EAAeC,YAAgB,CACnClC,IDMwB,WAAoC,IAAnC1B,EAAkC,uDAA1ByD,EAAeI,EAAW,uCAC3D,OAAQA,EAAOhG,MACb,KAAK3B,IAASC,SACZ,OAAOgH,EAAanD,EAAO,CAAE2B,QAAQ,EAAO+B,OAAO,GAAD,mBAAO1D,EAAM0D,QAAb,CAAqBG,EAAO/F,QAAQF,SAExF,KAAK1B,IAASE,sBACZ,OAAO+G,EAAanD,EAAO,CACzB2B,QAAQ,EACRC,aAAc,CACZ5D,IAAK6F,EAAO/F,QAAQE,IACpBC,IAAK4F,EAAO/F,QAAQG,IACpBC,KAAM2F,EAAO/F,QAAQI,QAI3B,KAAKhC,IAASG,uBACZ,OAAO8G,EAAanD,EAAO,CAAE2B,QAAQ,EAAOC,aAAc,OAE5D,QACE,OAAO5B,ICxBXC,QCH4B,WAAoC,IAAnCD,EAAkC,uDAA1ByD,EAAeI,EAAW,uCAC/D,OAAQA,EAAOhG,MACb,KAAK6B,EACH,OAAOyD,EAAanD,EAAO,CAAEF,MAAO+D,EAAO/F,QAAQgC,QAErD,QACE,OAAOE,MDCP8D,EAAiB,SAACC,GAMtB,OAAOC,IAAe,WAAf,cAAmBD,KAGtBE,EAAY,WAA0B,IAAzBC,EAAwB,uDAAP,GAQlC,OANAV,EAAQW,YACNR,EACAO,EACAJ,EAAe,MEpBbN,EF0ByB,SAACU,GAAoB,IAAD,EAC7CE,EAAY,UAAGZ,SAAH,QAAYS,EAAUC,GAetC,OAXIA,GAAkBV,IACpBY,EAAeH,EAAU,2BACpBT,EAAMa,YACNH,IAILV,OAAQc,GAIY,qBAAXC,QAKNf,IACHA,EAAQY,GALDA,EE3CGI,GAEdC,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,IAAD,CAAUlB,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJmB,SAASC,eAAe,SAM1BlC,EAAgBmC,QAAQC,O","file":"static/js/main.4445a373.chunk.js","sourcesContent":["export const appTypes = {\n  ADD_CITY: 'ADD_CITY',\n  OPEN_WEATHER_FORECAST: 'OPEN_WEATHER_FORECAST',\n  CLOSE_WEATHER_FORECAST: 'CLOSE_WEATHER_FORECAST',\n};\n","import PropTypes from 'prop-types';\nimport styles from './Skeleton.module.scss';\n\nexport function Skeleton({\n  count,\n  width,\n  wrapper: Wrapper,\n  height,\n  circle,\n  style: customStyle,\n  className: customClassName,\n}) {\n  const elements = [];\n\n  for (let i = 0; i < count; i++) {\n    let elementStyle = {};\n\n    if (width !== null) {\n      elementStyle.width = width;\n    }\n\n    if (height !== null) {\n      elementStyle.height = height;\n    }\n\n    if (width !== null && height !== null && circle) {\n      elementStyle.borderRadius = \"50%\";\n    }\n\n    let className = styles.skeleton;\n\n    if (customClassName) {\n      className += \" \" + customClassName;\n    }\n\n    elements.push(\n      <span\n        key={i}\n        className={className}\n        style={{\n          ...customStyle,\n          ...elementStyle,\n        }}\n      >\n        &zwnj;\n      </span>\n    );\n  }\n\n  return (\n    <span>\n      {Wrapper\n        ? elements.map((element, i) => (\n          <Wrapper key={i}>\n            {element}\n            &zwnj;\n          </Wrapper>\n        ))\n        : elements}\n    </span>\n  );\n}\n\nSkeleton.propTypes = {\n  count: PropTypes.number,\n  width: PropTypes.any,\n  wrapper: PropTypes.any,\n  height: PropTypes.any,\n  circle: PropTypes.bool,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nSkeleton.defaultProps = {\n  count: 1,\n  width: null,\n  wrapper: null,\n  height: null,\n  circle: false,\n  style: {},\n  className: \"\",\n};\n","import { appTypes } from './types';\n\nexport const addCity = (city) => ({\n  type: appTypes.ADD_CITY,\n  payload: { city }\n});\n\nexport const openWeatherForecast = (lon, lat, name) => ({\n  type: appTypes.OPEN_WEATHER_FORECAST,\n  payload: { lon, lat, name }\n});\n\nexport const closeWeatherForecast = () => ({ type: appTypes.CLOSE_WEATHER_FORECAST });\n","import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_BASE_URL,\n  params: {\n    appid: process.env.REACT_APP_BACKEND_API_KEY,\n  }\n});\n","import { makeUseAxios } from 'axios-hooks'\nimport { http } from '../http';\n\nexport const useHttp = makeUseAxios({\n  axios: http\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skeleton\":\"Skeleton_skeleton__8yEY-\",\"background-animation\":\"Skeleton_background-animation__YOnS0\"};","import { Skeleton } from '../../skeleton/Skeleton';\n\nexport function PageSkeleton() {\n  return (\n    <div className=\"row\">\n      {[1, 2, 3 ,4 ,5 ,6].map((i) => (\n        <div key={`page-skeleton-${i}`} className=\"col-md-4 mb-4\">\n          <Skeleton height=\"170px\" />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import loadable from '@loadable/component';\nimport { PageSkeleton } from './components/layouts/page-skeleton/PageSkeleton';\n\nconst lazyLoadOption = {\n  fallback: <PageSkeleton />,\n};\n\n// Lazy Load Import / Dynamic Import\nconst Dashboard = loadable(() => import('./pages/dashboard/Dashboard'), lazyLoadOption);\nconst About = loadable(() => import('./pages/about/About'), lazyLoadOption);\n\n// Application Routing\nexport const defaultRoute = '/dashboard'\nexport const routes = [\n  {\n    path: '/dashboard',\n    component: () => <Dashboard />\n  },\n  {\n    path: '/about',\n    component: () => <About />\n  },\n];\n","export function NotFound() {\n    return (\n        <div>This is Not Found</div>\n    );\n}\n","export const weatherTypes = {\n  SET_UNITS: 'SET_UNITS',\n};\n","import { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { enableImperialUnits, enableMetricUnits } from '../../../redux/weather/actions';\n\nexport function Navbar() {\n  const dispatch = useDispatch();\n  const units = useSelector((state) => state.weather.units);\n\n  function handleUnitSwitch(e) {\n    if (e.target.checked) {\n      dispatch(enableMetricUnits());\n    } else {\n      dispatch(enableImperialUnits());\n    }\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light navbar-weather\">\n      <div className=\"container\">\n        <Link className=\"navbar-brand text-brand text-primary\" to=\"/\">{process.env.REACT_APP_NAME}</Link>\n\n        <div className=\"d-flex\">\n          F&deg;\n          <div className=\"form-check form-switch ms-2\">\n            <input name=\"unit\" className=\"form-check-input\" type=\"checkbox\" checked={units === 'metric'} onChange={handleUnitSwitch} />\n          </div>\n          C&deg;\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import { weatherTypes } from './types';\n\nexport const setUnits = (units) => ({ type: weatherTypes.SET_UNITS, payload: { units } });\nexport const enableImperialUnits = () => ({ type: weatherTypes.SET_UNITS, payload: { units: 'imperial' } });\nexport const enableMetricUnits = () => ({ type: weatherTypes.SET_UNITS, payload: { units: 'metric' } });\n","import { NavLink } from 'react-router-dom';\n\nexport function Footer() {\n  return (\n    <footer className=\"footer\">\n      <ul className=\"nav justify-content-center\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/dashboard\">Dashboard</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" to=\"/about\">About Me</NavLink>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"https://efriandika.github.io/backbase-react\" target=\"_blank\" rel=\"noreferrer\">Live Demo</a>\n        </li>\n      </ul>\n\n      <div className=\"footer-text\">\n        Made with <i className=\"bi bi-heart\" role=\"img\" aria-label=\"Love\" /> for Backbase Interview Assignment.\n      </div>\n\n      <div className=\"author\">\n        <a href=\"https://www.linkedin.com/in/efriandika/\" target=\"_blank\"  rel=\"noreferrer\">\n          Efriandika Pratama\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useHttp } from '../../libs/http/hooks/useHttp';\nimport { useEffect } from 'react';\n\nexport function WeatherForecast({ className, units, lon, lat, name }) {\n  const [{ data, loading }, fetchData, cancelRequest] = useHttp({}, { manual: true });\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    fetchWeatherData(lat, lon);\n    return () => cancelRequest();\n  }, [lat, lon]);\n  /* eslint-enabled react-hooks/exhaustive-deps */\n\n  async function fetchWeatherData(lat, lon) {\n    try {\n      fetchData({\n        url: '/onecall',\n        params: {\n          lat,\n          lon,\n          units,\n          exclude: 'minutely,daily,alerts',\n        },\n      });\n    } catch (e) {\n      alert('Failed to get Skeleton Data from the server!');\n    }\n  }\n\n  return (\n    <div>{name}</div>\n  );\n}\n\nWeatherForecast.propTypes = {\n  className: PropTypes.string,\n  units: PropTypes.string,\n  lon: PropTypes.number.isRequired,\n  lat: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nWeatherForecast.defaultProps = {\n  className: '',\n  units: 'metric',\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { closeWeatherForecast } from '../../../redux/app/actions';\nimport { WeatherForecast } from '../../weather-forecast/WeatherForecast';\n\nexport function Drawer() {\n  const dispatch = useDispatch();\n  const drawerIsOpen = useSelector((state) => state.app.drawer);\n  const selectedCity = useSelector((state) => state.app.selectedCity);\n  const units = useSelector((state) => state.weather.selectedCity);\n\n  function closeDrawer() {\n    dispatch(closeWeatherForecast());\n  }\n\n  return (\n    <div className={`drawer ${drawerIsOpen ? 'open' : ''}`}>\n      <div className=\"drawer-overlay\" onClick={closeDrawer} />\n      <div className=\"drawer-content\">\n        <button type=\"button\" className=\"btn-close\" onClick={closeDrawer}>\n          <i className=\"bi bi-x\" />\n        </button>\n\n        {selectedCity ? (\n          <WeatherForecast\n            lat={selectedCity.lat}\n            lon={selectedCity.lon}\n            name={selectedCity.name}\n            units={units}\n          />\n        ) : (\n          <div>There is no city selected</div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { Navbar } from './partials/Navbar';\nimport { Footer } from './partials/Footer';\nimport { Drawer } from './partials/Drawer';\n\nexport function LayoutDefault({ children }) {\n  return (\n    <>\n      <Navbar />\n        <div className=\"layout-content\">\n          {children}\n        </div>\n      <Footer />\n      <Drawer />\n    </>\n  );\n}\n","import { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { defaultRoute, routes } from './routes';\nimport { NotFound } from './components/layouts/partials/NotFound';\nimport { LayoutDefault } from './components/layouts/LayoutDefault';\n\nfunction App() {\n  return (\n    <AppRouter basename=\"/backbase-react\">\n      <Switch>\n        {routes.map((route, index) => (\n          // You can render a <Route> in as many places\n          // as you want in your app. It will render along\n          // with any other <Route>s that also match the URL.\n          // So, a sidebar or breadcrumbs or anything else\n          // that requires you to render multiple things\n          // in multiple places at the same URL is nothing\n          // more than multiple <Route>s.\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            // children={<route.component />}\n            render={(props) => {\n              if (route.layout) {\n                return (\n                  <route.layout {...props}>\n                    <route.component {...props} />\n                  </route.layout>\n                )\n              } else {\n                return (\n                  <LayoutDefault {...props}>\n                    <route.component {...props} />\n                  </LayoutDefault>\n                )\n              }\n            }}\n          />\n        ))}\n\n        {defaultRoute !== '/' && <Redirect from=\"/\" to={defaultRoute} exact={true} />}\n\n        {/* NotFound page */}\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </AppRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function updateObject(oldObject, newValues) {\n  // Encapsulate the idea of passing a new object as the first parameter\n  // to Object.assign to ensure we correctly copy data instead of mutating\n  return Object.assign({}, oldObject, newValues)\n}\n\nexport function updateItemInArray(array, itemId, updateItemCallback) {\n  return array.map(item => {\n    if (item.id !== itemId) {\n      // Since we only want to update one item, preserve all others as they are now\n      return item\n    }\n\n    // Use the provided callback to create an updated item\n    return updateItemCallback(item)\n  })\n}\n\nexport function createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    } else {\n      return state\n    }\n  }\n}\n","import { appTypes } from './types';\nimport { updateObject } from '../utilities';\n\nexport const INITIAL_STATE = {\n  drawer: false,\n  selectedCity: null,\n  cities: [\n    'Amsterdam',\n    'Dublin,IE',\n    'Edinburgh',\n    'Manchester',\n    'London',\n  ],\n};\n\nexport const appReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case appTypes.ADD_CITY:\n      return updateObject(state, { drawer: false, cities: [ ...state.cities, action.payload.city ] });\n\n    case appTypes.OPEN_WEATHER_FORECAST:\n      return updateObject(state, {\n        drawer: true,\n        selectedCity: {\n          lon: action.payload.lon,\n          lat: action.payload.lat,\n          name: action.payload.name,\n        }\n      });\n\n    case appTypes.CLOSE_WEATHER_FORECAST:\n      return updateObject(state, { drawer: false, selectedCity: null });\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { appReducer } from './app/reducers';\nimport { weatherReducer } from './weather/reducers';\n\nlet store;\n\n/* ------------- Assemble The Reducers ------------- */\n/* eslint-disable global-require */\nconst rootReducers = combineReducers({\n  app: appReducer,\n  weather: weatherReducer,\n});\n/* eslint-enable global-require */\n\nconst bindMiddleware = (middleware) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line global-require\n    const { composeWithDevTools } = require('redux-devtools-extension');\n    return composeWithDevTools(applyMiddleware(...middleware));\n  }\n  return applyMiddleware(...middleware);\n};\n\nconst initStore = (preloadedState = {}) => {\n  /* ------------- Assemble Middleware ------------- */\n  store = createStore(\n    rootReducers,\n    preloadedState,\n    bindMiddleware([]),\n  );\n\n  return store;\n};\n\nexport const initializeStore = (preloadedState) => {\n  let currentStore = store ?? initStore(preloadedState);\n\n  // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n  if (preloadedState && store) {\n    currentStore = initStore({\n      ...store.getState(),\n      ...preloadedState,\n    });\n\n    // Reset the current store\n    store = undefined;\n  }\n\n  // For SSG and SSR always create a new store\n  if (typeof window === 'undefined') {\n    return currentStore;\n  }\n\n  // Create the store once only in the client\n  if (!store) {\n    store = currentStore;\n  }\n\n  return currentStore;\n};\n","import { weatherTypes } from './types';\nimport { updateObject } from '../utilities';\n\nexport const INITIAL_STATE = {\n  units: 'metric',\n};\n\nexport const weatherReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case weatherTypes.SET_UNITS:\n      return updateObject(state, { units: action.payload.units });\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './resources/styles/style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeStore } from './redux/store';\nimport { Provider } from 'react-redux';\n\nconst store = initializeStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}